State 0:
## Known stack suffix:
##
## LR(1) items:
program' -> . program [ # ]
## Transitions:
-- On tdecls shift to state 1
-- On program shift to state 197
## Reductions:
-- On TYPE LET
--   reduce production tdecls ->

State 1:
## Known stack suffix:
## tdecls
## LR(1) items:
program -> tdecls . lexprs EOF [ # ]
tdecls -> tdecls . tdecl [ TYPE LET ]
## Transitions:
-- On TYPE shift to state 2
-- On LET shift to state 52
-- On tdecl shift to state 194
-- On lexprs shift to state 195
-- On lexpr shift to state 193
## Reductions:

State 2:
## Known stack suffix:
## TYPE
## LR(1) items:
tdecl -> TYPE . NAME ASSIGN type_expr [ TYPE LET ]
## Transitions:
-- On NAME shift to state 3
## Reductions:

State 3:
## Known stack suffix:
## TYPE NAME
## LR(1) items:
tdecl -> TYPE NAME . ASSIGN type_expr [ TYPE LET ]
## Transitions:
-- On ASSIGN shift to state 4
## Reductions:

State 4:
## Known stack suffix:
## TYPE NAME ASSIGN
## LR(1) items:
tdecl -> TYPE NAME ASSIGN . type_expr [ TYPE LET ]
## Transitions:
-- On VOID shift to state 5
-- On STRING shift to state 6
-- On NAME shift to state 7
-- On LPAREN shift to state 24
-- On LBRACE shift to state 25
-- On INT shift to state 33
-- On FLOAT shift to state 34
-- On BOOL shift to state 35
-- On type_expr shift to state 51
-- On adt_type_expr shift to state 44
-- On adt_opt shift to state 47
## Reductions:

State 5:
## Known stack suffix:
## VOID
## LR(1) items:
type_expr -> VOID . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> VOID

State 6:
## Known stack suffix:
## STRING
## LR(1) items:
type_expr -> STRING . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> STRING

State 7:
## Known stack suffix:
## NAME
## LR(1) items:
adt_type_expr -> NAME . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
adt_type_expr -> NAME . OF type_name [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
## Transitions:
-- On OF shift to state 8
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW
--   reduce production adt_type_expr -> NAME

State 8:
## Known stack suffix:
## NAME OF
## LR(1) items:
adt_type_expr -> NAME OF . type_name [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 14
## Reductions:

State 9:
## Known stack suffix:
## STRING
## LR(1) items:
type_name -> STRING . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> STRING

State 10:
## Known stack suffix:
## NAME
## LR(1) items:
type_name -> NAME . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> NAME

State 11:
## Known stack suffix:
## INT
## LR(1) items:
type_name -> INT . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> INT

State 12:
## Known stack suffix:
## FLOAT
## LR(1) items:
type_name -> FLOAT . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> FLOAT

State 13:
## Known stack suffix:
## BOOL
## LR(1) items:
type_name -> BOOL . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> BOOL

State 14:
## Known stack suffix:
## NAME OF type_name
## LR(1) items:
adt_type_expr -> NAME OF type_name . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . LIST [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . STAR type_name [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . ARROW type_name [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . GROUP [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . RING [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . FIELD [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
type_name -> type_name . POLY [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW ]
## Transitions:
-- On STAR shift to state 15
-- On RING shift to state 17
-- On POLY shift to state 18
-- On LIST shift to state 19
-- On GROUP shift to state 20
-- On FIELD shift to state 21
-- On ARROW shift to state 22
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD BAR ARROW
--   reduce production adt_type_expr -> NAME OF type_name
** Conflict on STAR RING POLY LIST GROUP FIELD ARROW

State 15:
## Known stack suffix:
## type_name STAR
## LR(1) items:
type_name -> type_name STAR . type_name [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 16
## Reductions:

State 16:
## Known stack suffix:
## type_name STAR type_name
## LR(1) items:
type_name -> type_name . LIST [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . STAR type_name [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name STAR type_name . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . ARROW type_name [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . GROUP [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . RING [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . FIELD [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . POLY [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
-- On RING shift to state 17
-- On POLY shift to state 18
-- On LIST shift to state 19
-- On GROUP shift to state 20
-- On FIELD shift to state 21
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name STAR type_name
** Conflict on RING POLY LIST GROUP FIELD

State 17:
## Known stack suffix:
## type_name RING
## LR(1) items:
type_name -> type_name RING . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name RING

State 18:
## Known stack suffix:
## type_name POLY
## LR(1) items:
type_name -> type_name POLY . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name POLY

State 19:
## Known stack suffix:
## type_name LIST
## LR(1) items:
type_name -> type_name LIST . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name LIST

State 20:
## Known stack suffix:
## type_name GROUP
## LR(1) items:
type_name -> type_name GROUP . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name GROUP

State 21:
## Known stack suffix:
## type_name FIELD
## LR(1) items:
type_name -> type_name FIELD . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
## Reductions:
-- On TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name FIELD

State 22:
## Known stack suffix:
## type_name ARROW
## LR(1) items:
type_name -> type_name ARROW . type_name [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## type_name ARROW type_name
## LR(1) items:
type_name -> type_name . LIST [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . STAR type_name [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . ARROW type_name [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name ARROW type_name . [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . GROUP [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . RING [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . FIELD [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
type_name -> type_name . POLY [ TYPE STRINGLIT STAR RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME ]
## Transitions:
-- On STAR shift to state 15
-- On RING shift to state 17
-- On POLY shift to state 18
-- On LIST shift to state 19
-- On GROUP shift to state 20
-- On FIELD shift to state 21
## Reductions:
-- On TYPE STRINGLIT RPAREN RING RBRACE PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD COMMA BLIT BAR ARROW ADTNAME
--   reduce production type_name -> type_name ARROW type_name
** Conflict on RING POLY LIST GROUP FIELD

State 24:
## Known stack suffix:
## LPAREN
## LR(1) items:
type_expr -> LPAREN . type_expr RPAREN [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On VOID shift to state 5
-- On STRING shift to state 6
-- On NAME shift to state 7
-- On LPAREN shift to state 24
-- On LBRACE shift to state 25
-- On INT shift to state 33
-- On FLOAT shift to state 34
-- On BOOL shift to state 35
-- On type_expr shift to state 36
-- On adt_type_expr shift to state 44
-- On adt_opt shift to state 47
## Reductions:

State 25:
## Known stack suffix:
## LBRACE
## LR(1) items:
type_expr -> LBRACE . struct_decl_body RBRACE [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On NAME shift to state 26
-- On struct_decl_body shift to state 31
## Reductions:

State 26:
## Known stack suffix:
## NAME
## LR(1) items:
struct_decl_body -> NAME . COLON type_name [ RBRACE ]
struct_decl_body -> NAME . COLON type_name COMMA struct_decl_body [ RBRACE ]
## Transitions:
-- On COLON shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## NAME COLON
## LR(1) items:
struct_decl_body -> NAME COLON . type_name [ RBRACE ]
struct_decl_body -> NAME COLON . type_name COMMA struct_decl_body [ RBRACE ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## NAME COLON type_name
## LR(1) items:
struct_decl_body -> NAME COLON type_name . [ RBRACE ]
struct_decl_body -> NAME COLON type_name . COMMA struct_decl_body [ RBRACE ]
type_name -> type_name . LIST [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
type_name -> type_name . STAR type_name [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
type_name -> type_name . ARROW type_name [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
type_name -> type_name . GROUP [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
type_name -> type_name . RING [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
type_name -> type_name . FIELD [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
type_name -> type_name . POLY [ STAR RING RBRACE POLY LIST GROUP FIELD COMMA ARROW ]
## Transitions:
-- On STAR shift to state 15
-- On RING shift to state 17
-- On POLY shift to state 18
-- On LIST shift to state 19
-- On GROUP shift to state 20
-- On FIELD shift to state 21
-- On COMMA shift to state 29
-- On ARROW shift to state 22
## Reductions:
-- On RBRACE
--   reduce production struct_decl_body -> NAME COLON type_name

State 29:
## Known stack suffix:
## NAME COLON type_name COMMA
## LR(1) items:
struct_decl_body -> NAME COLON type_name COMMA . struct_decl_body [ RBRACE ]
## Transitions:
-- On NAME shift to state 26
-- On struct_decl_body shift to state 30
## Reductions:

State 30:
## Known stack suffix:
## NAME COLON type_name COMMA struct_decl_body
## LR(1) items:
struct_decl_body -> NAME COLON type_name COMMA struct_decl_body . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production struct_decl_body -> NAME COLON type_name COMMA struct_decl_body

State 31:
## Known stack suffix:
## LBRACE struct_decl_body
## LR(1) items:
type_expr -> LBRACE struct_decl_body . RBRACE [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On RBRACE shift to state 32
## Reductions:

State 32:
## Known stack suffix:
## LBRACE struct_decl_body RBRACE
## LR(1) items:
type_expr -> LBRACE struct_decl_body RBRACE . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> LBRACE struct_decl_body RBRACE

State 33:
## Known stack suffix:
## INT
## LR(1) items:
type_expr -> INT . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> INT

State 34:
## Known stack suffix:
## FLOAT
## LR(1) items:
type_expr -> FLOAT . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> FLOAT

State 35:
## Known stack suffix:
## BOOL
## LR(1) items:
type_expr -> BOOL . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> BOOL

State 36:
## Known stack suffix:
## LPAREN type_expr
## LR(1) items:
type_expr -> type_expr . LIST [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> type_expr . STAR type_expr [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> type_expr . ARROW type_expr [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> type_expr . GROUP [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> type_expr . RING [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> type_expr . FIELD [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> type_expr . POLY [ STAR RPAREN RING POLY LIST GROUP FIELD ARROW ]
type_expr -> LPAREN type_expr . RPAREN [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On STAR shift to state 37
-- On RPAREN shift to state 48
-- On RING shift to state 39
-- On POLY shift to state 40
-- On LIST shift to state 41
-- On GROUP shift to state 42
-- On FIELD shift to state 43
-- On ARROW shift to state 49
## Reductions:

State 37:
## Known stack suffix:
## type_expr STAR
## LR(1) items:
type_expr -> type_expr STAR . type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On VOID shift to state 5
-- On STRING shift to state 6
-- On NAME shift to state 7
-- On LPAREN shift to state 24
-- On LBRACE shift to state 25
-- On INT shift to state 33
-- On FLOAT shift to state 34
-- On BOOL shift to state 35
-- On type_expr shift to state 38
-- On adt_type_expr shift to state 44
-- On adt_opt shift to state 47
## Reductions:

State 38:
## Known stack suffix:
## type_expr STAR type_expr
## LR(1) items:
type_expr -> type_expr . LIST [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . STAR type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr STAR type_expr . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . ARROW type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . GROUP [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . RING [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . FIELD [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . POLY [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On RING shift to state 39
-- On POLY shift to state 40
-- On LIST shift to state 41
-- On GROUP shift to state 42
-- On FIELD shift to state 43
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr STAR type_expr
** Conflict on RING POLY LIST GROUP FIELD

State 39:
## Known stack suffix:
## type_expr RING
## LR(1) items:
type_expr -> type_expr RING . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr RING

State 40:
## Known stack suffix:
## type_expr POLY
## LR(1) items:
type_expr -> type_expr POLY . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr POLY

State 41:
## Known stack suffix:
## type_expr LIST
## LR(1) items:
type_expr -> type_expr LIST . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr LIST

State 42:
## Known stack suffix:
## type_expr GROUP
## LR(1) items:
type_expr -> type_expr GROUP . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr GROUP

State 43:
## Known stack suffix:
## type_expr FIELD
## LR(1) items:
type_expr -> type_expr FIELD . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr FIELD

State 44:
## Known stack suffix:
## adt_type_expr
## LR(1) items:
adt_opt -> adt_type_expr . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
adt_opt -> adt_type_expr . BAR adt_type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On BAR shift to state 45
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production adt_opt -> adt_type_expr

State 45:
## Known stack suffix:
## adt_type_expr BAR
## LR(1) items:
adt_opt -> adt_type_expr BAR . adt_type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On NAME shift to state 7
-- On adt_type_expr shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## adt_type_expr BAR adt_type_expr
## LR(1) items:
adt_opt -> adt_type_expr BAR adt_type_expr . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production adt_opt -> adt_type_expr BAR adt_type_expr

State 47:
## Known stack suffix:
## adt_opt
## LR(1) items:
type_expr -> adt_opt . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> adt_opt

State 48:
## Known stack suffix:
## LPAREN type_expr RPAREN
## LR(1) items:
type_expr -> LPAREN type_expr RPAREN . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
## Reductions:
-- On TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> LPAREN type_expr RPAREN

State 49:
## Known stack suffix:
## type_expr ARROW
## LR(1) items:
type_expr -> type_expr ARROW . type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On VOID shift to state 5
-- On STRING shift to state 6
-- On NAME shift to state 7
-- On LPAREN shift to state 24
-- On LBRACE shift to state 25
-- On INT shift to state 33
-- On FLOAT shift to state 34
-- On BOOL shift to state 35
-- On type_expr shift to state 50
-- On adt_type_expr shift to state 44
-- On adt_opt shift to state 47
## Reductions:

State 50:
## Known stack suffix:
## type_expr ARROW type_expr
## LR(1) items:
type_expr -> type_expr . LIST [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . STAR type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . ARROW type_expr [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr ARROW type_expr . [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . GROUP [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . RING [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . FIELD [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . POLY [ TYPE STAR RPAREN RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On STAR shift to state 37
-- On RING shift to state 39
-- On POLY shift to state 40
-- On LIST shift to state 41
-- On GROUP shift to state 42
-- On FIELD shift to state 43
## Reductions:
-- On TYPE RPAREN RING POLY LIST LET GROUP FIELD ARROW
--   reduce production type_expr -> type_expr ARROW type_expr
** Conflict on RING POLY LIST GROUP FIELD

State 51:
## Known stack suffix:
## TYPE NAME ASSIGN type_expr
## LR(1) items:
tdecl -> TYPE NAME ASSIGN type_expr . [ TYPE LET ]
type_expr -> type_expr . LIST [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . STAR type_expr [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . ARROW type_expr [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . GROUP [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . RING [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . FIELD [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
type_expr -> type_expr . POLY [ TYPE STAR RING POLY LIST LET GROUP FIELD ARROW ]
## Transitions:
-- On STAR shift to state 37
-- On RING shift to state 39
-- On POLY shift to state 40
-- On LIST shift to state 41
-- On GROUP shift to state 42
-- On FIELD shift to state 43
-- On ARROW shift to state 49
## Reductions:
-- On TYPE LET
--   reduce production tdecl -> TYPE NAME ASSIGN type_expr

State 52:
## Known stack suffix:
## LET
## LR(1) items:
lexpr -> LET . letand_opt IN expr [ EOF ]
lexprs -> LET . letand_opt lexprs [ EOF ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 53
-- On letand_opt shift to state 191
## Reductions:

State 53:
## Known stack suffix:
## type_name
## LR(1) items:
letand_opt -> type_name . NAME ASSIGN expr [ LET IN ]
letand_opt -> type_name . NAME ASSIGN expr LAND letand_opt [ LET IN ]
type_name -> type_name . LIST [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
type_name -> type_name . STAR type_name [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
type_name -> type_name . ARROW type_name [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
type_name -> type_name . GROUP [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
type_name -> type_name . RING [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
type_name -> type_name . FIELD [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
type_name -> type_name . POLY [ STAR RING POLY NAME LIST GROUP FIELD ARROW ]
## Transitions:
-- On STAR shift to state 15
-- On RING shift to state 17
-- On POLY shift to state 18
-- On NAME shift to state 54
-- On LIST shift to state 19
-- On GROUP shift to state 20
-- On FIELD shift to state 21
-- On ARROW shift to state 22
## Reductions:

State 54:
## Known stack suffix:
## type_name NAME
## LR(1) items:
letand_opt -> type_name NAME . ASSIGN expr [ LET IN ]
letand_opt -> type_name NAME . ASSIGN expr LAND letand_opt [ LET IN ]
## Transitions:
-- On ASSIGN shift to state 55
## Reductions:

State 55:
## Known stack suffix:
## type_name NAME ASSIGN
## LR(1) items:
letand_opt -> type_name NAME ASSIGN . expr [ LET IN ]
letand_opt -> type_name NAME ASSIGN . expr LAND letand_opt [ LET IN ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 188
-- On algebraic_expr shift to state 126
## Reductions:

State 56:
## Known stack suffix:
## STRINGLIT
## LR(1) items:
expr -> STRINGLIT . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> STRINGLIT

State 57:
## Known stack suffix:
## RING
## LR(1) items:
algebraic_expr -> RING . type_name expr expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 58
## Reductions:

State 58:
## Known stack suffix:
## RING type_name
## LR(1) items:
algebraic_expr -> RING type_name . expr expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
type_name -> type_name . LIST [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . STAR type_name [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . ARROW type_name [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . GROUP [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . RING [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . FIELD [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . POLY [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 15
-- On RING shift to state 59
-- On PRINT shift to state 60
-- On POLY shift to state 18
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LIST shift to state 19
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 78
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 96
-- On BLIT shift to state 97
-- On ARROW shift to state 22
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 182
-- On algebraic_expr shift to state 126
## Reductions:

State 59:
## Known stack suffix:
## type_name RING
## LR(1) items:
algebraic_expr -> RING . type_name expr expr expr expr expr expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
type_name -> type_name RING . [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 58
## Reductions:
-- On STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME
--   reduce production type_name -> type_name RING
** Conflict on NAME

State 60:
## Known stack suffix:
## PRINT
## LR(1) items:
expr -> PRINT . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 181
-- On algebraic_expr shift to state 126
## Reductions:

State 61:
## Known stack suffix:
## NOT
## LR(1) items:
expr -> NOT . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 180
-- On algebraic_expr shift to state 126
## Reductions:

State 62:
## Known stack suffix:
## NAME
## LR(1) items:
expr -> NAME . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> NAME . DOT NAME [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On DOT shift to state 63
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> NAME

State 63:
## Known stack suffix:
## NAME DOT
## LR(1) items:
expr -> NAME DOT . NAME [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On NAME shift to state 64
## Reductions:

State 64:
## Known stack suffix:
## NAME DOT NAME
## LR(1) items:
expr -> NAME DOT NAME . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> NAME DOT NAME

State 65:
## Known stack suffix:
## MINUS
## LR(1) items:
expr -> MINUS . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 115
-- On algebraic_expr shift to state 126
## Reductions:

State 66:
## Known stack suffix:
## LPAREN
## LR(1) items:
expr -> LPAREN . expr COMMA expr RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> LPAREN . expr RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 175
-- On algebraic_expr shift to state 126
## Reductions:

State 67:
## Known stack suffix:
## LITERAL
## LR(1) items:
expr -> LITERAL . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> LITERAL

State 68:
## Known stack suffix:
## LET
## LR(1) items:
lexpr -> LET . letand_opt IN expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 53
-- On letand_opt shift to state 69
## Reductions:

State 69:
## Known stack suffix:
## LET letand_opt
## LR(1) items:
lexpr -> LET letand_opt . IN expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On IN shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## LET letand_opt IN
## LR(1) items:
lexpr -> LET letand_opt IN . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 174
-- On algebraic_expr shift to state 126
## Reductions:

State 71:
## Known stack suffix:
## LBRACKET
## LR(1) items:
list_expr -> LBRACKET . inside_list RBRACKET [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On inside_list shift to state 169
-- On expr shift to state 171
-- On algebraic_expr shift to state 126
## Reductions:
-- On RBRACKET
--   reduce production inside_list ->

State 72:
## Known stack suffix:
## LBRACE
## LR(1) items:
expr -> LBRACE . struct_init_body RBRACE [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On NAME shift to state 73
-- On struct_init_body shift to state 167
## Reductions:

State 73:
## Known stack suffix:
## NAME
## LR(1) items:
struct_init_body -> NAME . ASSIGN expr [ RBRACE ]
struct_init_body -> NAME . ASSIGN expr COMMA struct_init_body [ RBRACE ]
## Transitions:
-- On ASSIGN shift to state 74
## Reductions:

State 74:
## Known stack suffix:
## NAME ASSIGN
## LR(1) items:
struct_init_body -> NAME ASSIGN . expr [ RBRACE ]
struct_init_body -> NAME ASSIGN . expr COMMA struct_init_body [ RBRACE ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 164
-- On algebraic_expr shift to state 126
## Reductions:

State 75:
## Known stack suffix:
## IF
## LR(1) items:
expr -> IF . expr THEN expr ELSE expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 159
-- On algebraic_expr shift to state 126
## Reductions:

State 76:
## Known stack suffix:
## GROUP
## LR(1) items:
algebraic_expr -> GROUP . type_name expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 77
## Reductions:

State 77:
## Known stack suffix:
## GROUP type_name
## LR(1) items:
algebraic_expr -> GROUP type_name . expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
type_name -> type_name . LIST [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . STAR type_name [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . ARROW type_name [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . GROUP [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . RING [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . FIELD [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . POLY [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 15
-- On RING shift to state 59
-- On PRINT shift to state 60
-- On POLY shift to state 18
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LIST shift to state 19
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 78
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 96
-- On BLIT shift to state 97
-- On ARROW shift to state 22
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 155
-- On algebraic_expr shift to state 126
## Reductions:

State 78:
## Known stack suffix:
## type_name GROUP
## LR(1) items:
algebraic_expr -> GROUP . type_name expr expr expr expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
type_name -> type_name GROUP . [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 77
## Reductions:
-- On STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME
--   reduce production type_name -> type_name GROUP
** Conflict on NAME

State 79:
## Known stack suffix:
## FUNCTION
## LR(1) items:
expr -> FUNCTION . fn_def [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On LPAREN shift to state 80
-- On formals shift to state 86
-- On fn_def shift to state 154
## Reductions:

State 80:
## Known stack suffix:
## LPAREN
## LR(1) items:
formals -> LPAREN . formals_opt RPAREN [ WITH STRINGLIT RING PRINT NOT NAME MINUS MATCH LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
-- On NAME shift to state 81
-- On formals_opt shift to state 82
-- On formal_list shift to state 84
## Reductions:
-- On RPAREN
--   reduce production formals_opt ->

State 81:
## Known stack suffix:
## NAME
## LR(1) items:
formal_list -> NAME . [ RPAREN NAME ]
## Transitions:
## Reductions:
-- On RPAREN NAME
--   reduce production formal_list -> NAME

State 82:
## Known stack suffix:
## LPAREN formals_opt
## LR(1) items:
formals -> LPAREN formals_opt . RPAREN [ WITH STRINGLIT RING PRINT NOT NAME MINUS MATCH LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
-- On RPAREN shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## LPAREN formals_opt RPAREN
## LR(1) items:
formals -> LPAREN formals_opt RPAREN . [ WITH STRINGLIT RING PRINT NOT NAME MINUS MATCH LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On WITH STRINGLIT RING PRINT NOT NAME MINUS MATCH LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production formals -> LPAREN formals_opt RPAREN

State 84:
## Known stack suffix:
## formal_list
## LR(1) items:
formal_list -> formal_list . NAME [ RPAREN NAME ]
formals_opt -> formal_list . [ RPAREN ]
## Transitions:
-- On NAME shift to state 85
## Reductions:
-- On RPAREN
--   reduce production formals_opt -> formal_list

State 85:
## Known stack suffix:
## formal_list NAME
## LR(1) items:
formal_list -> formal_list NAME . [ RPAREN NAME ]
## Transitions:
## Reductions:
-- On RPAREN NAME
--   reduce production formal_list -> formal_list NAME

State 86:
## Known stack suffix:
## formals
## LR(1) items:
fn_def -> formals . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
fn_def -> formals . MATCH formals WITH match_rule [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On MATCH shift to state 87
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 153
-- On algebraic_expr shift to state 126
## Reductions:

State 87:
## Known stack suffix:
## formals MATCH
## LR(1) items:
fn_def -> formals MATCH . formals WITH match_rule [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On LPAREN shift to state 80
-- On formals shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## formals MATCH formals
## LR(1) items:
fn_def -> formals MATCH formals . WITH match_rule [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On WITH shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## formals MATCH formals WITH
## LR(1) items:
fn_def -> formals MATCH formals WITH . match_rule [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On BAR shift to state 90
-- On match_rule shift to state 150
-- On match_line shift to state 151
## Reductions:

State 90:
## Known stack suffix:
## BAR
## LR(1) items:
match_line -> BAR . LPAREN pattern RPAREN ARROW expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On LPAREN shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## BAR LPAREN
## LR(1) items:
match_line -> BAR LPAREN . pattern RPAREN ARROW expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On UNDERSCORE shift to state 92
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 135
-- On target_wild shift to state 143
-- On target_conc_outer shift to state 114
-- On pattern shift to state 146
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 142
-- On algebraic_expr shift to state 126
## Reductions:

State 92:
## Known stack suffix:
## UNDERSCORE
## LR(1) items:
target_wild -> UNDERSCORE . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production target_wild -> UNDERSCORE

State 93:
## Known stack suffix:
## FLIT
## LR(1) items:
expr -> FLIT . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> FLIT

State 94:
## Known stack suffix:
## FIELD
## LR(1) items:
algebraic_expr -> FIELD . type_name expr expr expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## FIELD type_name
## LR(1) items:
algebraic_expr -> FIELD type_name . expr expr expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
type_name -> type_name . LIST [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . STAR type_name [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . ARROW type_name [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . GROUP [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . RING [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . FIELD [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
type_name -> type_name . POLY [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 15
-- On RING shift to state 59
-- On PRINT shift to state 60
-- On POLY shift to state 18
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LIST shift to state 19
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 78
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 96
-- On BLIT shift to state 97
-- On ARROW shift to state 22
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 128
-- On algebraic_expr shift to state 126
## Reductions:

State 96:
## Known stack suffix:
## type_name FIELD
## LR(1) items:
algebraic_expr -> FIELD . type_name expr expr expr expr expr expr expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
type_name -> type_name FIELD . [ STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 95
## Reductions:
-- On STRINGLIT STAR RING PRINT POLY NOT NAME MINUS LPAREN LITERAL LIST LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ARROW ADTNAME
--   reduce production type_name -> type_name FIELD
** Conflict on NAME

State 97:
## Known stack suffix:
## BLIT
## LR(1) items:
expr -> BLIT . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> BLIT

State 98:
## Known stack suffix:
## ADTNAME
## LR(1) items:
target_conc_outer -> ADTNAME . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
target_conc_outer -> ADTNAME . LPAREN target_conc_inner RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On LPAREN shift to state 99
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production target_conc_outer -> ADTNAME
** Conflict on LPAREN

State 99:
## Known stack suffix:
## ADTNAME LPAREN
## LR(1) items:
target_conc_outer -> ADTNAME LPAREN . target_conc_inner RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On ADTNAME shift to state 100
-- On target_conc_outer shift to state 127
-- On target_conc_inner shift to state 103
## Reductions:

State 100:
## Known stack suffix:
## ADTNAME
## LR(1) items:
target_conc_inner -> ADTNAME . LPAREN expr RPAREN [ RPAREN ]
target_conc_outer -> ADTNAME . [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_conc_outer -> ADTNAME . LPAREN target_conc_inner RPAREN [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On LPAREN shift to state 101
## Reductions:
-- On STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production target_conc_outer -> ADTNAME
** Conflict on LPAREN

State 101:
## Known stack suffix:
## ADTNAME LPAREN
## LR(1) items:
target_conc_inner -> ADTNAME LPAREN . expr RPAREN [ RPAREN ]
target_conc_outer -> ADTNAME LPAREN . target_conc_inner RPAREN [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 100
-- On target_conc_outer shift to state 102
-- On target_conc_inner shift to state 103
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 107
-- On algebraic_expr shift to state 126
## Reductions:

State 102:
## Known stack suffix:
## target_conc_outer
## LR(1) items:
expr -> target_conc_outer . [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_conc_inner -> target_conc_outer . [ RPAREN ]
## Transitions:
## Reductions:
-- On STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> target_conc_outer
-- On RPAREN
--   reduce production target_conc_inner -> target_conc_outer
** Conflict on RPAREN

State 103:
## Known stack suffix:
## ADTNAME LPAREN target_conc_inner
## LR(1) items:
target_conc_outer -> ADTNAME LPAREN target_conc_inner . RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On RPAREN shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## ADTNAME LPAREN target_conc_inner RPAREN
## LR(1) items:
target_conc_outer -> ADTNAME LPAREN target_conc_inner RPAREN . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production target_conc_outer -> ADTNAME LPAREN target_conc_inner RPAREN

State 105:
## Known stack suffix:
## list_expr
## LR(1) items:
expr -> list_expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> list_expr

State 106:
## Known stack suffix:
## lexpr
## LR(1) items:
expr -> lexpr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> lexpr

State 107:
## Known stack suffix:
## ADTNAME LPAREN expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_conc_inner -> ADTNAME LPAREN expr . RPAREN [ RPAREN ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RPAREN shift to state 109
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 108:
## Known stack suffix:
## STAR
## LR(1) items:
binop -> STAR . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> STAR

State 109:
## Known stack suffix:
## ADTNAME LPAREN expr RPAREN
## LR(1) items:
target_conc_inner -> ADTNAME LPAREN expr RPAREN . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production target_conc_inner -> ADTNAME LPAREN expr RPAREN

State 110:
## Known stack suffix:
## PLUS
## LR(1) items:
binop -> PLUS . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> PLUS

State 111:
## Known stack suffix:
## OR
## LR(1) items:
binop -> OR . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> OR

State 112:
## Known stack suffix:
## NEQ
## LR(1) items:
binop -> NEQ . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> NEQ

State 113:
## Known stack suffix:
## MINUS
## LR(1) items:
binop -> MINUS . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
expr -> MINUS . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 115
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT RING PRINT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> MINUS
** Conflict on STRINGLIT RING PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME

State 114:
## Known stack suffix:
## target_conc_outer
## LR(1) items:
expr -> target_conc_outer . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> target_conc_outer

State 115:
## Known stack suffix:
## MINUS expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> MINUS expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> MINUS expr
** Conflict on STRINGLIT RING PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME

State 116:
## Known stack suffix:
## expr expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 117:
## Known stack suffix:
## LT
## LR(1) items:
binop -> LT . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> LT

State 118:
## Known stack suffix:
## LEQ
## LR(1) items:
binop -> LEQ . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> LEQ

State 119:
## Known stack suffix:
## GT
## LR(1) items:
binop -> GT . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> GT

State 120:
## Known stack suffix:
## GEQ
## LR(1) items:
binop -> GEQ . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> GEQ

State 121:
## Known stack suffix:
## EQ
## LR(1) items:
binop -> EQ . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> EQ

State 122:
## Known stack suffix:
## DIVIDE
## LR(1) items:
binop -> DIVIDE . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> DIVIDE

State 123:
## Known stack suffix:
## AND
## LR(1) items:
binop -> AND . [ STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME ]
## Transitions:
## Reductions:
-- On STRINGLIT RING PRINT NOT NAME MINUS LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME
--   reduce production binop -> AND

State 124:
## Known stack suffix:
## expr binop
## LR(1) items:
expr -> expr binop . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 125
-- On algebraic_expr shift to state 126
## Reductions:

State 125:
## Known stack suffix:
## expr binop expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr binop expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> expr binop expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 126:
## Known stack suffix:
## algebraic_expr
## LR(1) items:
expr -> algebraic_expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> algebraic_expr

State 127:
## Known stack suffix:
## target_conc_outer
## LR(1) items:
target_conc_inner -> target_conc_outer . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production target_conc_inner -> target_conc_outer

State 128:
## Known stack suffix:
## FIELD type_name expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr . expr expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 129
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 129:
## Known stack suffix:
## FIELD type_name expr expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr expr . expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 130
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 130:
## Known stack suffix:
## FIELD type_name expr expr expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr expr expr . expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 131
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 131:
## Known stack suffix:
## FIELD type_name expr expr expr expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr expr expr expr . expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 132
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 132:
## Known stack suffix:
## FIELD type_name expr expr expr expr expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr expr expr expr expr . expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 133
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 133:
## Known stack suffix:
## FIELD type_name expr expr expr expr expr expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr expr expr expr expr expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 134
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 134:
## Known stack suffix:
## FIELD type_name expr expr expr expr expr expr expr
## LR(1) items:
algebraic_expr -> FIELD type_name expr expr expr expr expr expr expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production algebraic_expr -> FIELD type_name expr expr expr expr expr expr expr
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 135:
## Known stack suffix:
## ADTNAME
## LR(1) items:
target_conc_outer -> ADTNAME . [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
target_conc_outer -> ADTNAME . LPAREN target_conc_inner RPAREN [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
target_wild -> ADTNAME . [ RPAREN COMMA ]
target_wild -> ADTNAME . LPAREN target_wild RPAREN [ RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 136
## Reductions:
-- On STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME
--   reduce production target_conc_outer -> ADTNAME
-- On RPAREN COMMA
--   reduce production target_wild -> ADTNAME
** Conflict on RPAREN LPAREN COMMA

State 136:
## Known stack suffix:
## ADTNAME LPAREN
## LR(1) items:
target_conc_outer -> ADTNAME LPAREN . target_conc_inner RPAREN [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
target_wild -> ADTNAME LPAREN . target_wild RPAREN [ RPAREN COMMA ]
## Transitions:
-- On UNDERSCORE shift to state 92
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 137
-- On target_wild shift to state 139
-- On target_conc_outer shift to state 102
-- On target_conc_inner shift to state 103
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 142
-- On algebraic_expr shift to state 126
## Reductions:

State 137:
## Known stack suffix:
## ADTNAME
## LR(1) items:
target_conc_inner -> ADTNAME . LPAREN expr RPAREN [ RPAREN ]
target_conc_outer -> ADTNAME . [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_conc_outer -> ADTNAME . LPAREN target_conc_inner RPAREN [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_wild -> ADTNAME . [ RPAREN ]
target_wild -> ADTNAME . LPAREN target_wild RPAREN [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 138
## Reductions:
-- On STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production target_conc_outer -> ADTNAME
-- On RPAREN
--   reduce production target_wild -> ADTNAME
** Conflict on RPAREN LPAREN

State 138:
## Known stack suffix:
## ADTNAME LPAREN
## LR(1) items:
target_conc_inner -> ADTNAME LPAREN . expr RPAREN [ RPAREN ]
target_conc_outer -> ADTNAME LPAREN . target_conc_inner RPAREN [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_wild -> ADTNAME LPAREN . target_wild RPAREN [ RPAREN ]
## Transitions:
-- On UNDERSCORE shift to state 92
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 137
-- On target_wild shift to state 139
-- On target_conc_outer shift to state 102
-- On target_conc_inner shift to state 103
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 141
-- On algebraic_expr shift to state 126
## Reductions:

State 139:
## Known stack suffix:
## ADTNAME LPAREN target_wild
## LR(1) items:
target_wild -> ADTNAME LPAREN target_wild . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 140
## Reductions:

State 140:
## Known stack suffix:
## ADTNAME LPAREN target_wild RPAREN
## LR(1) items:
target_wild -> ADTNAME LPAREN target_wild RPAREN . [ RPAREN COMMA ]
## Transitions:
## Reductions:
-- On RPAREN COMMA
--   reduce production target_wild -> ADTNAME LPAREN target_wild RPAREN

State 141:
## Known stack suffix:
## ADTNAME LPAREN expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
target_conc_inner -> ADTNAME LPAREN expr . RPAREN [ RPAREN ]
target_wild -> expr . [ RPAREN ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RPAREN shift to state 109
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On RPAREN
--   reduce production target_wild -> expr
** Conflict on RPAREN

State 142:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
target_wild -> expr . [ RPAREN COMMA ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On RPAREN COMMA
--   reduce production target_wild -> expr

State 143:
## Known stack suffix:
## target_wild
## LR(1) items:
pattern -> target_wild . [ RPAREN ]
pattern -> target_wild . COMMA pattern [ RPAREN ]
## Transitions:
-- On COMMA shift to state 144
## Reductions:
-- On RPAREN
--   reduce production pattern -> target_wild

State 144:
## Known stack suffix:
## target_wild COMMA
## LR(1) items:
pattern -> target_wild COMMA . pattern [ RPAREN ]
## Transitions:
-- On UNDERSCORE shift to state 92
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 135
-- On target_wild shift to state 143
-- On target_conc_outer shift to state 114
-- On pattern shift to state 145
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 142
-- On algebraic_expr shift to state 126
## Reductions:

State 145:
## Known stack suffix:
## target_wild COMMA pattern
## LR(1) items:
pattern -> target_wild COMMA pattern . [ RPAREN ]
## Transitions:
## Reductions:
-- On RPAREN
--   reduce production pattern -> target_wild COMMA pattern

State 146:
## Known stack suffix:
## BAR LPAREN pattern
## LR(1) items:
match_line -> BAR LPAREN pattern . RPAREN ARROW expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On RPAREN shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## BAR LPAREN pattern RPAREN
## LR(1) items:
match_line -> BAR LPAREN pattern RPAREN . ARROW expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On ARROW shift to state 148
## Reductions:

State 148:
## Known stack suffix:
## BAR LPAREN pattern RPAREN ARROW
## LR(1) items:
match_line -> BAR LPAREN pattern RPAREN ARROW . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 149
-- On algebraic_expr shift to state 126
## Reductions:

State 149:
## Known stack suffix:
## BAR LPAREN pattern RPAREN ARROW expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
match_line -> BAR LPAREN pattern RPAREN ARROW expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT RPAREN RING RBRACKET RBRACE PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE LAND IN IF GROUP FUNCTION FLIT FIELD EOF ELSE COMMA BLIT BAR ADTNAME
--   reduce production match_line -> BAR LPAREN pattern RPAREN ARROW expr
** Conflict on STRINGLIT RING PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME

State 150:
## Known stack suffix:
## formals MATCH formals WITH match_rule
## LR(1) items:
fn_def -> formals MATCH formals WITH match_rule . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production fn_def -> formals MATCH formals WITH match_rule

State 151:
## Known stack suffix:
## match_line
## LR(1) items:
match_rule -> match_line . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
match_rule -> match_line . match_rule [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On BAR shift to state 90
-- On match_rule shift to state 152
-- On match_line shift to state 151
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production match_rule -> match_line
** Conflict on BAR

State 152:
## Known stack suffix:
## match_line match_rule
## LR(1) items:
match_rule -> match_line match_rule . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production match_rule -> match_line match_rule

State 153:
## Known stack suffix:
## formals expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
fn_def -> formals expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production fn_def -> formals expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 154:
## Known stack suffix:
## FUNCTION fn_def
## LR(1) items:
expr -> FUNCTION fn_def . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> FUNCTION fn_def

State 155:
## Known stack suffix:
## GROUP type_name expr
## LR(1) items:
algebraic_expr -> GROUP type_name expr . expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 156
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 156:
## Known stack suffix:
## GROUP type_name expr expr
## LR(1) items:
algebraic_expr -> GROUP type_name expr expr . expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 157
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 157:
## Known stack suffix:
## GROUP type_name expr expr expr
## LR(1) items:
algebraic_expr -> GROUP type_name expr expr expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 158
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 158:
## Known stack suffix:
## GROUP type_name expr expr expr expr
## LR(1) items:
algebraic_expr -> GROUP type_name expr expr expr expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production algebraic_expr -> GROUP type_name expr expr expr expr
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 159:
## Known stack suffix:
## IF expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> IF expr . THEN expr ELSE expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On THEN shift to state 160
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 160:
## Known stack suffix:
## IF expr THEN
## LR(1) items:
expr -> IF expr THEN . expr ELSE expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 161
-- On algebraic_expr shift to state 126
## Reductions:

State 161:
## Known stack suffix:
## IF expr THEN expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ ELSE DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ ELSE DIVIDE BLIT AND ADTNAME ]
expr -> IF expr THEN expr . ELSE expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On ELSE shift to state 162
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 162:
## Known stack suffix:
## IF expr THEN expr ELSE
## LR(1) items:
expr -> IF expr THEN expr ELSE . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 163
-- On algebraic_expr shift to state 126
## Reductions:

State 163:
## Known stack suffix:
## IF expr THEN expr ELSE expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> IF expr THEN expr ELSE expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> IF expr THEN expr ELSE expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 164:
## Known stack suffix:
## NAME ASSIGN expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RING RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
struct_init_body -> NAME ASSIGN expr . [ RBRACE ]
struct_init_body -> NAME ASSIGN expr . COMMA struct_init_body [ RBRACE ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On COMMA shift to state 165
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On RBRACE
--   reduce production struct_init_body -> NAME ASSIGN expr

State 165:
## Known stack suffix:
## NAME ASSIGN expr COMMA
## LR(1) items:
struct_init_body -> NAME ASSIGN expr COMMA . struct_init_body [ RBRACE ]
## Transitions:
-- On NAME shift to state 73
-- On struct_init_body shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## NAME ASSIGN expr COMMA struct_init_body
## LR(1) items:
struct_init_body -> NAME ASSIGN expr COMMA struct_init_body . [ RBRACE ]
## Transitions:
## Reductions:
-- On RBRACE
--   reduce production struct_init_body -> NAME ASSIGN expr COMMA struct_init_body

State 167:
## Known stack suffix:
## LBRACE struct_init_body
## LR(1) items:
expr -> LBRACE struct_init_body . RBRACE [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On RBRACE shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## LBRACE struct_init_body RBRACE
## LR(1) items:
expr -> LBRACE struct_init_body RBRACE . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> LBRACE struct_init_body RBRACE

State 169:
## Known stack suffix:
## LBRACKET inside_list
## LR(1) items:
list_expr -> LBRACKET inside_list . RBRACKET [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On RBRACKET shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## LBRACKET inside_list RBRACKET
## LR(1) items:
list_expr -> LBRACKET inside_list RBRACKET . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production list_expr -> LBRACKET inside_list RBRACKET

State 171:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
inside_list -> expr . inside_list [ RBRACKET ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On inside_list shift to state 172
-- On expr shift to state 173
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On RBRACKET
--   reduce production inside_list ->

State 172:
## Known stack suffix:
## expr inside_list
## LR(1) items:
inside_list -> expr inside_list . [ RBRACKET ]
## Transitions:
## Reductions:
-- On RBRACKET
--   reduce production inside_list -> expr inside_list

State 173:
## Known stack suffix:
## expr expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
inside_list -> expr . inside_list [ RBRACKET ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On inside_list shift to state 172
-- On expr shift to state 173
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
-- On RBRACKET
--   reduce production inside_list ->
** Conflict on STRINGLIT STAR RING RBRACKET PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 174:
## Known stack suffix:
## LET letand_opt IN expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
lexpr -> LET letand_opt IN expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT RPAREN RING RBRACKET RBRACE PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE LAND IN IF GROUP FUNCTION FLIT FIELD EOF ELSE COMMA BLIT BAR ADTNAME
--   reduce production lexpr -> LET letand_opt IN expr
** Conflict on STRINGLIT RING PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME

State 175:
## Known stack suffix:
## LPAREN expr
## LR(1) items:
expr -> LPAREN expr . COMMA expr RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE COMMA BLIT AND ADTNAME ]
expr -> LPAREN expr . RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RPAREN shift to state 176
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On COMMA shift to state 177
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 176:
## Known stack suffix:
## LPAREN expr RPAREN
## LR(1) items:
expr -> LPAREN expr RPAREN . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> LPAREN expr RPAREN

State 177:
## Known stack suffix:
## LPAREN expr COMMA
## LR(1) items:
expr -> LPAREN expr COMMA . expr RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On MINUS shift to state 65
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 178
-- On algebraic_expr shift to state 126
## Reductions:

State 178:
## Known stack suffix:
## LPAREN expr COMMA expr
## LR(1) items:
expr -> LPAREN expr COMMA expr . RPAREN [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RPAREN RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RPAREN shift to state 179
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 179:
## Known stack suffix:
## LPAREN expr COMMA expr RPAREN
## LR(1) items:
expr -> LPAREN expr COMMA expr RPAREN . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> LPAREN expr COMMA expr RPAREN

State 180:
## Known stack suffix:
## NOT expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> NOT expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On NOT shift to state 61
-- On NAME shift to state 62
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GROUP shift to state 76
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On BLIT shift to state 97
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> NOT expr
** Conflict on STRINGLIT RING PRINT NAME LPAREN LITERAL LET LBRACKET LBRACE IF GROUP FUNCTION FLIT FIELD BLIT ADTNAME

State 181:
## Known stack suffix:
## PRINT expr
## LR(1) items:
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> PRINT expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production expr -> PRINT expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 182:
## Known stack suffix:
## RING type_name expr
## LR(1) items:
algebraic_expr -> RING type_name expr . expr expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 183
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:

State 183:
## Known stack suffix:
## RING type_name expr expr
## LR(1) items:
algebraic_expr -> RING type_name expr expr . expr expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 184
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 184:
## Known stack suffix:
## RING type_name expr expr expr
## LR(1) items:
algebraic_expr -> RING type_name expr expr expr . expr expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 185
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 185:
## Known stack suffix:
## RING type_name expr expr expr expr
## LR(1) items:
algebraic_expr -> RING type_name expr expr expr expr . expr expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 186
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 186:
## Known stack suffix:
## RING type_name expr expr expr expr expr
## LR(1) items:
algebraic_expr -> RING type_name expr expr expr expr expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 187
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 187:
## Known stack suffix:
## RING type_name expr expr expr expr expr expr
## LR(1) items:
algebraic_expr -> RING type_name expr expr expr expr expr expr . [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . binop expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr . expr [ THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME ]
expr -> expr expr . [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On THEN STRINGLIT STAR RPAREN RING RBRACKET RBRACE PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ EOF ELSE DIVIDE COMMA BLIT BAR AND ADTNAME
--   reduce production algebraic_expr -> RING type_name expr expr expr expr expr expr
-- On STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME
--   reduce production expr -> expr expr
** Conflict on STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME

State 188:
## Known stack suffix:
## type_name NAME ASSIGN expr
## LR(1) items:
expr -> expr . binop expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
expr -> expr . expr [ STRINGLIT STAR RING PRINT PLUS OR NOT NEQ NAME MINUS LT LPAREN LITERAL LET LEQ LBRACKET LBRACE LAND IN IF GT GROUP GEQ FUNCTION FLIT FIELD EQ DIVIDE BLIT AND ADTNAME ]
letand_opt -> type_name NAME ASSIGN expr . [ LET IN ]
letand_opt -> type_name NAME ASSIGN expr . LAND letand_opt [ LET IN ]
## Transitions:
-- On STRINGLIT shift to state 56
-- On STAR shift to state 108
-- On RING shift to state 57
-- On PRINT shift to state 60
-- On PLUS shift to state 110
-- On OR shift to state 111
-- On NOT shift to state 61
-- On NEQ shift to state 112
-- On NAME shift to state 62
-- On MINUS shift to state 113
-- On LT shift to state 117
-- On LPAREN shift to state 66
-- On LITERAL shift to state 67
-- On LET shift to state 68
-- On LEQ shift to state 118
-- On LBRACKET shift to state 71
-- On LBRACE shift to state 72
-- On LAND shift to state 189
-- On IF shift to state 75
-- On GT shift to state 119
-- On GROUP shift to state 76
-- On GEQ shift to state 120
-- On FUNCTION shift to state 79
-- On FLIT shift to state 93
-- On FIELD shift to state 94
-- On EQ shift to state 121
-- On DIVIDE shift to state 122
-- On BLIT shift to state 97
-- On AND shift to state 123
-- On ADTNAME shift to state 98
-- On target_conc_outer shift to state 114
-- On list_expr shift to state 105
-- On lexpr shift to state 106
-- On expr shift to state 116
-- On binop shift to state 124
-- On algebraic_expr shift to state 126
## Reductions:
-- On LET IN
--   reduce production letand_opt -> type_name NAME ASSIGN expr
** Conflict on LET

State 189:
## Known stack suffix:
## type_name NAME ASSIGN expr LAND
## LR(1) items:
letand_opt -> type_name NAME ASSIGN expr LAND . letand_opt [ LET IN ]
## Transitions:
-- On STRING shift to state 9
-- On NAME shift to state 10
-- On INT shift to state 11
-- On FLOAT shift to state 12
-- On BOOL shift to state 13
-- On type_name shift to state 53
-- On letand_opt shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## type_name NAME ASSIGN expr LAND letand_opt
## LR(1) items:
letand_opt -> type_name NAME ASSIGN expr LAND letand_opt . [ LET IN ]
## Transitions:
## Reductions:
-- On LET IN
--   reduce production letand_opt -> type_name NAME ASSIGN expr LAND letand_opt

State 191:
## Known stack suffix:
## LET letand_opt
## LR(1) items:
lexpr -> LET letand_opt . IN expr [ EOF ]
lexprs -> LET letand_opt . lexprs [ EOF ]
## Transitions:
-- On LET shift to state 52
-- On IN shift to state 70
-- On lexprs shift to state 192
-- On lexpr shift to state 193
## Reductions:

State 192:
## Known stack suffix:
## LET letand_opt lexprs
## LR(1) items:
lexprs -> LET letand_opt lexprs . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production lexprs -> LET letand_opt lexprs

State 193:
## Known stack suffix:
## lexpr
## LR(1) items:
lexprs -> lexpr . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production lexprs -> lexpr

State 194:
## Known stack suffix:
## tdecls tdecl
## LR(1) items:
tdecls -> tdecls tdecl . [ TYPE LET ]
## Transitions:
## Reductions:
-- On TYPE LET
--   reduce production tdecls -> tdecls tdecl

State 195:
## Known stack suffix:
## tdecls lexprs
## LR(1) items:
program -> tdecls lexprs . EOF [ # ]
## Transitions:
-- On EOF shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## tdecls lexprs EOF
## LR(1) items:
program -> tdecls lexprs EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production program -> tdecls lexprs EOF

State 197:
## Known stack suffix:
## program
## LR(1) items:
program' -> program . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept program

