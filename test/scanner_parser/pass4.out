let ([Int, Int] -> Int) add = (Int n, Int m) -> n + m in
let ([Int] -> Int) inverse = (Int n) -> 1 * n in
let ([Int, Int] -> Bool) equals = (Int n, Int m) -> n == m in
let Int group num_group = Int 0 equals add inverse in
let ([Int, Int] -> Int) mult = (Int n, Int m) -> n * m in
let ([Int, Int] -> Int) div = (Int n, Int m) -> n / m in
let Int ring num_ring = Int 0 equals add inverse 1 mult div in
num_ring
